---
- name: Start {{ galera_node.name }} if absent
  community.docker.docker_container:
    name: "{{ galera_node.name }}"
    image: "{{ galera_image }}"
    restart_policy: unless-stopped
    env:
      MARIADB_ROOT_PASSWORD: "{{ db_root_password }}"
      MARIADB_USER: "{{ mariadb_user }}"
      MARIADB_PASSWORD: "{{ mariadb_password }}"
      MARIADB_DATABASE: "{{ wordpress_db_name }}"
      MARIADB_GALERA_CLUSTER_ADDRESS: "gcomm://{{ galera_nodes | map(attribute='name') | join(',') }}"
      MARIADB_GALERA_SST_METHOD: "{{ galera_sst_method }}"
      MARIADB_GALERA_MARIABACKUP_PASSWORD: "{{ db_root_password }}"
      MARIADB_ENABLE_LDAP: "no"
      MARIADB_SKIP_TEST_DB: "no"
    volumes:
      - "galera_data_node_{{ galera_node.id }}:/bitnami/mariadb/data"
    networks:
      - name: "{{ docker_network }}"
    healthcheck:
      test:
        [
          "CMD",
          "/opt/bitnami/mariadb/bin/mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-p{{ db_root_password }}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    state: started

- name: Wait until {{ galera_node.name }} container appears healthy or simply running
  community.docker.docker_container_info:
    name: "{{ galera_node.name }}"
  register: node_state
  until:
    - node_state.container.State.Status == 'running' and
      (
      (node_state.container.State.Health is defined and
      node_state.container.State.Health.Status == 'healthy') or
      (node_state.container.State.Health is not defined)
      )
  retries: 30
  delay: 10
  changed_when: false

- name: Ensure host resolves '{{ galera_node.name }}' to container IP
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: '.*\s+{{ galera_node.name }}$'
    line: "{{ node_state.container.NetworkSettings.Networks[docker_network].IPAddress }} {{ galera_node.name }}"
    state: present
  become: true

- name: Wait until port 3306 on {{ galera_node.name }} is accepting connections
  ansible.builtin.wait_for:
    host: "{{ galera_node.name }}"
    port: 3306
    delay: 2
    timeout: 180
  changed_when: false

- name: Wait for MariaDB socket to be ready on {{ galera_node.name }}
  community.docker.docker_container_exec:
    container: "{{ galera_node.name }}"
    command: >
      /bin/bash -c "for i in {1..30}; do
      if /opt/bitnami/mariadb/bin/mysqladmin ping -h localhost -p{{ db_root_password }} 2>/dev/null; then
        exit 0;
      fi;
      sleep 2;
      done;
      exit 1"
  register: socket_check
  changed_when: false

- name: Grant root access from all hosts on {{ galera_node.name }}
  community.docker.docker_container_exec:
    container: "{{ galera_node.name }}"
    command: >
      /bin/bash -c "/opt/bitnami/mariadb/bin/mariadb -u root -p{{ db_root_password }} -e
      \"CREATE USER IF NOT EXISTS 'root'@'%' IDENTIFIED BY '{{ db_root_password }}';
      GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;
      FLUSH PRIVILEGES;\""
  register: grant_result
  retries: 5
  delay: 10
  until: grant_result.rc == 0
