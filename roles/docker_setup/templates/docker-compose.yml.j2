version: "{{ docker_compose_version }}"

services:
  db:
    image: mysql:8.4.4
    container_name: wordpress_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: {{ mysql_root_password }}
      MYSQL_DATABASE: {{ database_name }}
      MYSQL_USER: {{ database_user }}
      MYSQL_PASSWORD: {{ database_password }}
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u{{ database_user }}", "-p{{ database_password }}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - {{ docker_network }}

  wordpress:
    image: wordpress:6.5.3-php8.3-fpm
    container_name: wordpress_app
    restart: unless-stopped
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: {{ database_user }}
      WORDPRESS_DB_PASSWORD: {{ database_password }}
      WORDPRESS_DB_NAME: {{ database_name }}
    volumes:
      - wordpress_data:/var/www/html
    depends_on:
      db:
        condition: service_healthy
    networks:
      - {{ docker_network }}

  nginx:
    image: nginx:1.26.0
    container_name: wordpress_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - wordpress_data:/var/www/html
      - "{{ project_root }}/nginx.conf:/etc/nginx/conf.d/default.conf:ro"
    depends_on:
      - wordpress
    networks:
      - {{ docker_network }}

volumes:
  wordpress_data:
  db_data:

networks:
  {{ docker_network }}:
